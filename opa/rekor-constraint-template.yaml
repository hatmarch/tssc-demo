apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8srekorverify
spec:
  crd:
    spec:
      names:
        kind: K8sRekorVerify
    validation:
      openAPIV3Schema:
        properties:
          rekorServerURL:
            type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8srekorverify

        violation[{"msg": msg, "details": {}}] {
          image := input_containers[_].image
          split_image := split(image,":")
          label := arr[count(split_image)-1]


          # rekor_url := sprintf("%v/api/v1/log/entries/%v", [input.parameters.rekorServerURL, "e635f03f4e74caba5429770331e11bf3b7a832f822b88be18b8787053d36493d"])
          rekor_url := sprintf("%v/api/v1/log/entries/%v", [input.parameters.rekorServerURL, label])

          http.send({"method": "get", "url": rekor_url}, output) 
          msg := sprintf("\nImage: %v\nStatus code: %v \nBody: %v\n", [image, output.status_code, output.body])
        } 

        input_containers[c] {
          c := input.review.object.spec.containers[_]
        }

        input_containers[c] {
          c := input.review.object.spec.initContainers[_]
        }